{"version":3,"sources":["api/apiSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/filtersSlice.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","store/index.js","index.js"],"names":["apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getHeroes","query","providesTags","createHero","mutation","hero","url","method","body","invalidatesTags","deleteHero","id","getFilters","useGetHeroesQuery","useCreateHeroMutation","useDeleteHeroMutation","useGetFiltersQuery","HeroesListItem","elementClassName","name","description","element","onDelete","className","src","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","data","heroes","isLoading","isError","activeFilter","useSelector","state","filters","filteredHeroes","useMemo","slice","filter","item","useCallback","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","onSubmit","e","preventDefault","newHero","uuidv4","unwrap","htmlFor","required","placeholder","value","onChange","target","label","renderFilters","initialState","createEntityAdapter","getInitialState","filtersLoadingStatus","filtersSlice","createSlice","reducers","activeFilterChanged","action","payload","actions","reducer","HeroesFilters","dispatch","useDispatch","btnClass","App","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c719c312.chunk.js","sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react';\r\n\r\nexport const apiSlice = createApi({\r\n    reducerPath: 'Api',\r\n    baseQuery: fetchBaseQuery({baseUrl: 'http://localhost:3001'}),\r\n    tagTypes: ['Heroes'],\r\n    endpoints: builder => ({\r\n        getHeroes: builder.query({\r\n            query: () => '/heroes',\r\n            providesTags: ['Heroes']\r\n        }),\r\n        createHero: builder.mutation({\r\n            query: hero => ({\r\n                url: '/heroes',\r\n                method: 'POST',\r\n                body: hero\r\n            }),\r\n            invalidatesTags: ['Heroes']\r\n            \r\n        }),\r\n        deleteHero: builder.mutation({\r\n            query: id => ({\r\n                url: `/heroes/${id}`,\r\n                method: 'DELETE'\r\n            }),\r\n            invalidatesTags: ['Heroes']\r\n        }),\r\n        getFilters: builder.query({\r\n            query: () => '/filters',\r\n        })\r\n    })\r\n});\r\n\r\nexport const {useGetHeroesQuery, useCreateHeroMutation, useDeleteHeroMutation, useGetFiltersQuery} = apiSlice;","const HeroesListItem = ({name, description, element, onDelete}) => {\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span onClick={onDelete} \n                className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { useCallback, useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\nimport { useGetHeroesQuery, useDeleteHeroMutation } from '../../api/apiSlice';\r\n\r\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nimport './heroesList.scss';\r\n\r\nconst HeroesList = () => {\r\n    \r\n    const {\r\n        data: heroes = [],\r\n        isLoading,\r\n        isError,\r\n    } = useGetHeroesQuery();\r\n\r\n    const [deleteHero] = useDeleteHeroMutation();\r\n\r\n    const activeFilter = useSelector(state => state.filters.activeFilter);\r\n\r\n    const filteredHeroes = useMemo (() => {\r\n        const filteredHeroes = heroes.slice();\r\n\r\n        if (activeFilter === 'all') {\r\n            return filteredHeroes;\r\n        } else {\r\n            return filteredHeroes.filter(item => item.element === activeFilter);\r\n        }\r\n    }, [heroes, activeFilter]);\r\n\r\n    const onDelete = useCallback((id) => {\r\n        deleteHero(id);\r\n        // eslint-disable-next-line  \r\n    }, []);\r\n\r\n    if (isLoading) {\r\n        return <Spinner/>;\r\n    } else if (isError) {\r\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\r\n    }\r\n\r\n    const renderHeroesList = (arr) => {\r\n        if (arr.length === 0) {\r\n            return (\r\n                <CSSTransition\r\n                    timeout={0}\r\n                    classNames=\"hero\">\r\n                    <h5 className=\"text-center mt-5\">Героев пока нет</h5>\r\n                </CSSTransition>\r\n            )\r\n        }\r\n\r\n        return arr.map(({id, ...props}) => {\r\n            return (\r\n                <CSSTransition \r\n                    key={id}\r\n                    timeout={500}\r\n                    classNames=\"hero\">\r\n                    <HeroesListItem  {...props} onDelete={() => onDelete(id)}/>\r\n                </CSSTransition>\r\n            )\r\n        })\r\n    }\r\n\r\n    const elements = renderHeroesList(filteredHeroes);\r\n    return (\r\n        <TransitionGroup component=\"ul\">\r\n            {elements}\r\n        </TransitionGroup>\r\n    )\r\n}\r\n\r\nexport default HeroesList;","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { useCreateHeroMutation, useGetFiltersQuery } from '../../api/apiSlice';\n\nconst HeroesAddForm = () => {\n    const {\n        data: filters = [],\n        isError,\n    } = useGetFiltersQuery();\n\n    const [heroName, setHeroName] = useState('');\n    const [heroDescr, setHeroDescr] = useState('');\n    const [heroElement, setHeroElement] = useState('');\n\n    const [createHero, {isLoading}] = useCreateHeroMutation();\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        const newHero = {\n            id: uuidv4(),\n            name: heroName,\n            description: heroDescr,\n            element: heroElement\n        }\n\n        createHero(newHero).unwrap();\n\n        setHeroName('');\n        setHeroDescr('');\n        setHeroElement('');\n    }\n\n    const renderFilters = (filters) => {\n        if (isLoading) {\n            return <option>Загрузка элементов</option>\n        } else if (isError) {\n            return <option>Ошибка загрузки</option>\n        }\n        \n        if (filters && filters.length > 0 ) {\n            return filters.map(({name, label}) => {\n                // eslint-disable-next-line\n                if (name === 'all')  return;\n\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"\n                    value={heroName}\n                    onChange={(e) => setHeroName(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}\n                    value={heroDescr}\n                    onChange={(e) => setHeroDescr(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    value={heroElement}\n                    onChange={(e) => setHeroElement(e.target.value)}>\n                    <option value=\"\">Я владею элементом...</option>\n                    {renderFilters(filters)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst filtersAdapter = createEntityAdapter();\r\nconst initialState = filtersAdapter.getInitialState({\r\n    filtersLoadingStatus: 'idle',\r\n    activeFilter: 'all'\r\n});\r\n\r\nconst filtersSlice = createSlice({\r\n    name:'filters',\r\n    initialState,\r\n    reducers: {\r\n        activeFilterChanged: (state, action) => {\r\n            state.activeFilter = action.payload \r\n        }\r\n    }\r\n});\r\n\r\nconst {actions, reducer} = filtersSlice;\r\n\r\n/* export const {selectAll} = filtersAdapter.getSelectors(state => state.filters);\r\n */\r\nexport default reducer;\r\n\r\nexport const { activeFilterChanged } = actions;","import { useDispatch, useSelector } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { useGetFiltersQuery } from '../../api/apiSlice';\r\nimport { activeFilterChanged } from './filtersSlice';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nconst HeroesFilters = () => {\r\n    const {\r\n        data: filters = [],\r\n        isLoading,\r\n        isError\r\n    } = useGetFiltersQuery();\r\n\r\n    const {activeFilter} = useSelector(state => state.filters);\r\n    const dispatch = useDispatch();\r\n\r\n    /* useEffect(() => {\r\n        dispatch(fetchFilters(request));\r\n\r\n        // eslint-disable-next-line\r\n    }, []); */\r\n\r\n    if (isLoading) {\r\n        return <Spinner/>;\r\n    } else if (isError) {\r\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\r\n    }\r\n\r\n    const renderFilters = (arr) => {\r\n        if (arr.length === 0) {\r\n            return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>\r\n        }\r\n\r\n        return arr.map(({name, className, label}) => {\r\n\r\n            const btnClass = classNames('btn', className, {\r\n                'active': name === activeFilter\r\n            });\r\n            \r\n            return <button \r\n                        key={name} \r\n                        id={name} \r\n                        className={btnClass}\r\n                        onClick={() => dispatch(activeFilterChanged(name))}\r\n                        >{label}</button>\r\n        })\r\n    }\r\n\r\n    const elements = renderFilters(filters);\r\n\r\n    return (\r\n        <div className=\"card shadow-lg mt-4\">\r\n            <div className=\"card-body\">\r\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\r\n                <div className=\"btn-group\">\r\n                    {elements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\nimport filters from '../components/heroesFilters/filtersSlice';\nimport { apiSlice } from '../api/apiSlice';\n\nconst stringMiddleware = () => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action)\n};\n\nconst store = configureStore({\n    reducer: {filters, [apiSlice.reducerPath]: apiSlice.reducer},\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware, apiSlice.middleware),\n    devTools: process.env.NODE_ENV !== 'production',\n    \n})\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}